{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ambientLight","AmbientLight","color","intensity","pointLight","PointLight","position","DEFAULT_THEME","buildingColor","trailColor0","trailColor1","trailColor2","trailColor3","trailColor4","material","ambient","diffuse","shininess","specularColor","effects","LightingEffect","INITIAL_VIEW_STATE","longitude","VIEWSTATE_COORDINATES","latitude","zoom","pitch","bearing","App","buildings","BUILDINGS","depot_locations","DEPOT_LOCATIONS","trips","TRIPS","missed_passengers","MISSED_PASSENGERS","waiting","WAITING","trailLength","initialViewState","mapStyle","theme","loopLength","LOOP_LENGTH","startingAnimationSpeed","ANIMATION_SPEED","startTime","START_TIME","useState","occupancyHideArray","setOccupancyHideArray","animationSpeed","setAnimationSpeed","prevAnimationSpeed","setPrevAnimationSpeed","time","setTime","period","$","css","hours","Math","floor","minutes","seconds","display_time","text","updateTime","num_active_vehicles","METRIC_ANIMATIONS","num_active_passengers","avo","passengers_left","served_passengers","html","toFixed","toString","updateMetricAnimations","animation","animate","t","id","window","requestAnimationFrame","useEffect","cancelAnimationFrame","depotLocations","trailColors","layers","TripsLayer","data","getPath","d","path","getTimestamps","timestamps","getColor","num","vendor","includes","updateTriggers","opacity","widthMinPixels","rounded","currentTime","shadowEnabled","pickable","PolygonLayer","extruded","wireframe","getPolygon","f","polygon","getElevation","height","getFillColor","TextLayer","getPosition","c","split","getText","getSize","getTextAnchor","getAlignmentBaseline","getPixelOffset","parameters","depthTest","ScatterplotLayer","getRadius","filled","radiusMinPixels","radiusMaxPixels","style","bottom","right","zIndex","class","type","value","onClick","id_str","copyArray","result","prop","filter","parseInt","val","concat","console","log","for","background","left","width","textAlign","max","paddingTop","float","onChange","document","getElementById","min","controller","getTooltip","object","m","reuseMaps","preventStyleDiffing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"js/main.4bfce1d9.chunk.js","sourcesContent":["/* global window */\nimport React, {useState, useEffect} from 'react';\nimport {render} from 'react-dom';\nimport {StaticMap} from 'react-map-gl';\nimport {AmbientLight, PointLight, LightingEffect} from '@deck.gl/core';\nimport DeckGL from '@deck.gl/react';\nimport {PolygonLayer, TextLayer, ScatterplotLayer} from '@deck.gl/layers';\nimport {TripsLayer} from '@deck.gl/geo-layers';\n\nfunction updateMetricAnimations(time) {\n  let num_active_vehicles = METRIC_ANIMATIONS[\"NumOfActiveVehicles\"][time];\n  let num_active_passengers = METRIC_ANIMATIONS[\"NumOfActivePassengers\"][time];\n  let avo = METRIC_ANIMATIONS[\"AVO\"][time];\n  let passengers_left = METRIC_ANIMATIONS[\"PassengersLeft\"][time];\n  let served_passengers = METRIC_ANIMATIONS[\"ServedPassengers\"][time];\n  $('#AVO').html(avo.toFixed(2).toString());\n  $('#NumOfActiveVehicles').html(num_active_vehicles.toString());\n  $('#NumOfActivePassengers').html(num_active_passengers.toString());\n  $('#PassengersLeft').html(passengers_left.toString());\n  $('#ServedPassengers').html(served_passengers.toString());\n};\n\nfunction updateTime(time) {\n  var period = \"AM\";\n  if (time / 3600 >= 12) {\n    period = \"PM\";\n  }\n  if (time / 3600 <= 6 || time / 3600 >= 18) {\n    $('#time').css('background-color', 'black');\n    $('#time').css('color', 'white');\n  }\n  else {\n    $('#time').css('background-color', 'white');\n    $('#time').css('color', 'black');\n  }\n\n  var hours = Math.floor(time / 3600) % 12;\n  var minutes = Math.floor(time / 60) % 60;\n  var seconds = time % 60;\n\n  if (hours == 0) hours = 12;\n  hours = hours < 10 ? `0${hours}` : hours;\n  minutes = minutes < 10 ? `0${minutes}` : minutes;\n  seconds = seconds < 10 ? `0${seconds}` : seconds;\n\n  var display_time = `${hours}:${minutes}:${seconds} ${period}`;\n  $('#time').text(display_time);\n};\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0\n});\n\nconst pointLight = new PointLight({\n  color: [255, 255, 255],\n  intensity: 2.0,\n  position: [-74.762758, 40.226667, 8000]\n});\n\nconst lightingEffect = new LightingEffect({ambientLight, pointLight});\n\nconst material = {\n  ambient: 0.1,\n  diffuse: 0.6,\n  shininess: 32,\n  specularColor: [60, 64, 70]\n};\n\nconst DEFAULT_THEME = {\n  buildingColor: [175, 175, 175], // gray\n  trailColor0: [255, 0, 0], // red\n  trailColor1: [173, 216, 230], // lightblue\n  trailColor2: [0, 0, 139], // dark blue\n  trailColor3: [144, 238, 144], // light green\n  trailColor4: [0, 100, 0], // dark green\n  material,\n  effects: [lightingEffect]\n};\n\nconst INITIAL_VIEW_STATE = {\n  longitude: VIEWSTATE_COORDINATES[1],\n  latitude: VIEWSTATE_COORDINATES[0],\n  zoom: 12,\n  pitch: 45,\n  bearing: 0\n};\n\nconst MAP_STYLE = 'https://basemaps.cartocdn.com/gl/positron-nolabels-gl-style/style.json';\n\nfunction App({\n  buildings = BUILDINGS,\n  depot_locations = DEPOT_LOCATIONS,\n  trips = TRIPS,\n  missed_passengers = MISSED_PASSENGERS,\n  waiting = WAITING,\n  trailLength = 15,\n  initialViewState = INITIAL_VIEW_STATE,\n  mapStyle = MAP_STYLE,\n  theme = DEFAULT_THEME,\n  loopLength = LOOP_LENGTH, // unit corresponds to the timestamp in source data\n  startingAnimationSpeed = ANIMATION_SPEED,\n  startTime = START_TIME\n}) {\n  // States that decide which vehicle occupancy to show\n  const [occupancyHideArray, setOccupancyHideArray] = useState([]);\n\n  const [animationSpeed, setAnimationSpeed] = useState(startingAnimationSpeed);\n  const [prevAnimationSpeed, setPrevAnimationSpeed] = useState(animationSpeed);\n  const [time, setTime] = useState(startTime);\n  updateTime(time);\n  updateMetricAnimations(time);\n  const [animation] = useState({});\n\n  const animate = () => {\n    setTime(t => (t + animationSpeed) % loopLength);\n    animation.id = window.requestAnimationFrame(animate);\n  };\n\n  useEffect(\n    () => {\n      animation.id = window.requestAnimationFrame(animate);\n      return () => window.cancelAnimationFrame(animation.id);\n    },\n    [animation, animationSpeed, time, prevAnimationSpeed, occupancyHideArray]\n  );\n\n  const depotLocations = depot_locations;\n  const trailColors = [theme.trailColor0, theme.trailColor1, theme.trailColor2, theme.trailColor3, theme.trailColor4];\n  const layers = [\n    new TripsLayer({\n      id: 'trips',\n      data: trips,\n      getPath: d => d.path,\n      getTimestamps: d => d.timestamps,\n      getColor: d => {\n        let num = d.vendor;\n        if (!(occupancyHideArray.includes(num))) {\n          return trailColors[num];\n        }\n        else {\n          return [0, 0, 0, 0];\n        }\n      },\n      updateTriggers: {\n        getColor: occupancyHideArray\n      },\n      opacity: 1,\n      widthMinPixels: 10,\n      rounded: true,\n      trailLength,\n      currentTime: time,\n      shadowEnabled: false,\n      // Enable picking\n      pickable: true\n    }),\n    new PolygonLayer({\n      id: 'buildings',\n      data: buildings,\n      extruded: true,\n      wireframe: false,\n      opacity: 0.5,\n      getPolygon: f => f.polygon,\n      getElevation: f => f.height,\n      getFillColor: theme.buildingColor,\n      material: theme.material,\n      // Enable picking\n      pickable: true\n    }),\n    new TextLayer({\n      id: 'waiting_passengers',\n      data: waiting[time],\n      getPosition: d => depotLocations[d.c.split(\" \")[0]],\n      getText: d => d.c.split(\" \")[1],\n      getSize: 20,\n      getColor: [255, 0, 0],\n      getTextAnchor: 'start',\n      getAlignmentBaseline: 'bottom',\n      getPixelOffset: [5, 5],\n      parameters: {depthTest: false}\n    }),\n    new TextLayer({\n      id: 'waiting_vehicles',\n      data: waiting[time],\n      getPosition: d => depotLocations[d.c.split(\" \")[0]],\n      getText: d => d.c.split(\" \")[2],\n      getSize: 20,\n      getColor: [79, 130, 247],\n      getTextAnchor: 'end',\n      getAlignmentBaseline: 'bottom',\n      getPixelOffset: [-5, 5],\n      parameters: {depthTest: false}\n    }),\n    new ScatterplotLayer({\n      id: 'missed_passengers',\n      data: missed_passengers[time],\n      getPosition: d => depotLocations[d.c],\n      getRadius: 100,\n      filled: true,\n      getFillColor: [255, 0, 0],\n      opacity: 0.5,\n      radiusMinPixels: 1,\n      radiusMaxPixels: 200,\n      parameters: {depthTest: false},\n      pickable: true\n    })\n  ];\n\n  return (\n    <div>\n    <div id=\"topright\" style={{position: 'absolute', bottom: '10px', right: '0', zIndex: '1'}}>\n      <div class='my-legend'>\n        <div class='legend-title'>Car Occupancy</div>\n        <div class='legend-scale'>\n          <ul class='legend-labels'>\n            <li>\n              <input type=\"checkbox\" id=\"zeroPax\" value=\"0\" onClick={() => {\n              let id_str=\"#zeroPax\";\n              const copyArray = [...occupancyHideArray];\n              var result = [];\n              if ($(id_str).prop('checked')) {\n                result = copyArray.filter(num => num != parseInt($(id_str).val()));\n              }\n              else {\n                result = copyArray.concat(parseInt($(id_str).val()));\n              }\n              console.log(result);\n              setOccupancyHideArray(result);\n            }} />\n                <label for=\"zeroPax\">\n                  <span style={{background: '#FF0000'}}></span>Zero Passengers\n                </label>\n            </li>\n            <li>\n              <input type=\"checkbox\" id=\"onePax\" value=\"1\" onClick={() => {\n              let id_str=\"#onePax\";\n              const copyArray = [...occupancyHideArray];\n              var result = [];\n              if ($(id_str).prop('checked')) {\n                result = copyArray.filter(num => num != parseInt($(id_str).val()));\n              }\n              else {\n                result = copyArray.concat(parseInt($(id_str).val()));\n              }\n              console.log(result);\n              setOccupancyHideArray(result);\n            }} />\n                <label for=\"onePax\">\n                  <span style={{background: '#ADD8E6'}}></span>One Passenger\n                </label>\n            </li>\n            <li>\n              <input type=\"checkbox\" id=\"twoPax\" value=\"2\" onClick={() => {\n              let id_str=\"#twoPax\";\n              const copyArray = [...occupancyHideArray];\n              var result = [];\n              if ($(id_str).prop('checked')) {\n                result = copyArray.filter(num => num != parseInt($(id_str).val()));\n              }\n              else {\n                result = copyArray.concat(parseInt($(id_str).val()));\n              }\n              console.log(result);\n              setOccupancyHideArray(result);\n            }} />\n                <label for=\"twoPax\">\n                  <span style={{background: '#00008B'}}></span>Two Passengers\n                </label>\n            </li>\n            <li>\n              <input type=\"checkbox\" id=\"threePax\" value=\"3\" onClick={() => {\n              let id_str=\"#threePax\";\n              const copyArray = [...occupancyHideArray];\n              var result = [];\n              if ($(id_str).prop('checked')) {\n                result = copyArray.filter(num => num != parseInt($(id_str).val()));\n              }\n              else {\n                result = copyArray.concat(parseInt($(id_str).val()));\n              }\n              console.log(result);\n              setOccupancyHideArray(result);\n            }} />\n                <label for=\"threePax\">\n                  <span style={{background: '#90EE90'}}></span>Three Passengers\n                </label>\n            </li>\n            <li>\n              <input type=\"checkbox\" id=\"fourPax\" value=\"4\" onClick={() => {\n              let id_str=\"#fourPax\";\n              const copyArray = [...occupancyHideArray];\n              var result = [];\n              if ($(id_str).prop('checked')) {\n                result = copyArray.filter(num => num != parseInt($(id_str).val()));\n              }\n              else {\n                result = copyArray.concat(parseInt($(id_str).val()));\n              }\n              console.log(result);\n              setOccupancyHideArray(result);\n            }} />\n                <label for=\"fourPax\">\n                  <span style={{background: '#006400'}}></span>Four Passengers\n                </label>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n    <div style={{position: 'absolute', bottom: '0', left: '30%', width: '40%', textAlign: 'center', zIndex: '2'}}>\n    <button onClick={() => {setTime(Math.max(0, time-1));}}>\n        <i class=\"fas fa-step-backward\" />\n    </button>\n    <button onClick={() => {setAnimationSpeed(prevAnimationSpeed);}}>\n        <i class=\"fa fa-play\" />\n    </button>\n    <button onClick={() => {setPrevAnimationSpeed(animationSpeed); setAnimationSpeed(0);}}>\n        <i class=\"fa fa-stop\" />\n    </button>\n    <button onClick={() => {setTime((time+1) % loopLength);}}>\n        <i class=\"fas fa-step-forward\" />\n    </button>\n    <button onClick={() => {setPrevAnimationSpeed(1); setAnimationSpeed(1); setTime(0);}}>\n        <i class=\"fas fa-redo\" />\n    </button>\n    <br />\n    <label for=\"speedInput\">Speed: {animationSpeed}x</label>\n    <input style={{paddingTop: '5px', width:\"70%\", float:\"right\"}} id=\"speedInput\" onChange={() => {setAnimationSpeed(parseInt(document.getElementById(\"speedSelector\").value)); setPrevAnimationSpeed(parseInt(document.getElementById(\"speedSelector\").value));}} type=\"range\" value={animationSpeed} min=\"0\" max=\"50\" id=\"speedSelector\" />\n    <br />\n    <label for=\"timeInput\">Time: {time} sec</label>\n    <input style={{width:\"70%\", float: \"right\"}} id=\"timeInput\" onChange={() => {setTime(parseInt(document.getElementById(\"timeSelector\").value) % loopLength);}} type=\"range\" value={time} min=\"0\" max={loopLength} id=\"timeSelector\" />\n    </div>\n\n    <DeckGL\n      layers={layers}\n      effects={theme.effects}\n      initialViewState={initialViewState}\n      controller={true}\n      getTooltip={({object}) => object && object.m}\n    >\n      <StaticMap reuseMaps mapStyle={mapStyle} preventStyleDiffing={true} />\n    </DeckGL>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}